From e3ad1b8487459922cc11afa4e3c3c1d98dcf9a52 Mon Sep 17 00:00:00 2001
From: celeste cote <celeste@cote21.fr>
Date: Wed, 3 Feb 2021 21:20:21 +0000
Subject: [PATCH] patch5: adding a task and blink the led

---
 blink_kern.c | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/blink_kern.c b/blink_kern.c
index 4faa778..55bb45a 100644
--- a/blink_kern.c
+++ b/blink_kern.c
@@ -31,6 +31,16 @@ MODULE_PARM_DESC(blink_pr, "Blink period in ms");
 // this is the pointeur to the thread task
 static struct task_struct *task;
 
+static int blink(void *arg)
+{
+    while (!kthread_should_stop()) {
+        set_current_state(TASK_RUNNING);
+        msleep(blink_pr);
+        gpio_set_value(GPIO_CTRL_OUT, !gpio_get_value(GPIO_CTRL_OUT));
+    }
+    return (0);
+}
+
 static int __init drv_blink_init(void)
 {
     printk(KERN_INFO "BLINK DRV: Initialisation: blink at %d ms", blink_pr);
@@ -61,8 +71,19 @@ static int __init drv_blink_init(void)
     // at the start we put the value at 1 -> the Led will light up
     gpio_set_value(GPIO_CTRL_OUT, 1);
 
+    // Now we will start a kernel thread (it will be detached)
+    task = kthread_run(blink, NULL, "blink_thread");
+    if (IS_ERR(task)) {
+        LOG("the blink task fail to run");
+        goto r_gpio;
+    }
+
     return (0);
 
+r_gpio:
+    gpio_set_value(GPIO_CTRL_OUT, 0);
+    gpio_unexport(GPIO_CTRL_OUT);
+    gpio_free(GPIO_CTRL_OUT);
 r_class:
     class_destroy(dev_class);
 r_device:
@@ -80,6 +101,9 @@ static void drv_blink_exit(void)
     // free the region in the dev
     unregister_chrdev_region(dev, 1);
 
+    // don't forget to stop the task
+    kthread_stop(task);
+
     // unrealease our GPIO
     gpio_set_value(GPIO_CTRL_OUT, 0);
     gpio_unexport(GPIO_CTRL_OUT);
-- 
2.20.1

