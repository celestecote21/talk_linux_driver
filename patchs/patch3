From e7e88d267c42d3838737f450f8974f4ec5aa8288 Mon Sep 17 00:00:00 2001
From: celeste cote <celeste@cote21.fr>
Date: Mon, 1 Feb 2021 23:54:59 +0000
Subject: [PATCH] patch2: init of the dev in /dev

---
 blink_kern.c | 25 ++++++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)

diff --git a/blink_kern.c b/blink_kern.c
index c98a970..0b7a91d 100644
--- a/blink_kern.c
+++ b/blink_kern.c
@@ -12,21 +12,44 @@ MODULE_LICENSE("Dual BSD/GPL");
 MODULE_AUTHOR("Celeste");
 
 dev_t dev = MKDEV(55, 12);
+// the class struct will represent the /sys/class of the device
+static struct class *dev_class;
 
 static int __init drv_blink_init(void)
 {
     LOG("initialisation");
     // allocation of the major and minor dev
     if (register_chrdev_region(dev, 1, "blink_drv_dev_reg") < 0) {
-	    LOG("error can't create the dev\n");
+	    LOG("error can't create the dev with major and minor\n");
         return (-1);
     }
+
+    dev_class = class_create(THIS_MODULE, "blink_drv_class");
+    if (dev_class == NULL) {
+	    LOG("error can't create the class\n");
+        goto r_device;
+    }
+
+    if (device_create(dev_class, NULL, dev, NULL, "blink_dev") == NULL) {
+	    LOG("error can't create the device\n");
+        goto r_class;
+    }
+
     return (0);
+r_class:
+    class_destroy(dev_class);
+r_device:
+    unregister_chrdev_region(dev, 1); // unalloate the major and minor
+    return (-1);
 }
 
 static void drv_blink_exit(void)
 {
     LOG("exit");
+    // destory the device in /dev
+    device_destroy(dev_class, dev);
+    // destroy the class in /sys/class
+    class_destroy(dev_class);
     // free the region in the dev
     unregister_chrdev_region(dev, 1);
 }
-- 
2.20.1

