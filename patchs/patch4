From 35d494f206d9612afd2c413505716f1d5e11662f Mon Sep 17 00:00:00 2001
From: celeste cote <celeste@cote21.fr>
Date: Wed, 3 Feb 2021 20:55:26 +0000
Subject: [PATCH] patch3: adding the blink period in param

---
 blink_kern.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/blink_kern.c b/blink_kern.c
index 0b7a91d..4f8b8d1 100644
--- a/blink_kern.c
+++ b/blink_kern.c
@@ -1,5 +1,7 @@
 #include <linux/init.h>
 #include <linux/module.h>
+#include <linux/kernel.h>
+#include <asm/uaccess.h>
 #include <linux/types.h>
 #include <linux/fs.h>
 #include <linux/device.h>
@@ -7,6 +9,7 @@
 #include <linux/cdev.h>
 
 #define LOG(str) (printk(KERN_ALERT "BLINK DRV: %s\n", str))
+#define LOGINFO(str) (printk(KERN_INFO "BLINK DRV: %s\n", str))
 
 MODULE_LICENSE("Dual BSD/GPL");
 MODULE_AUTHOR("Celeste");
@@ -15,9 +18,14 @@ dev_t dev = MKDEV(55, 12);
 // the class struct will represent the /sys/class of the device
 static struct class *dev_class;
 
+static int blink_pr = 200;
+
+module_param(blink_pr, int, S_IWUSR | S_IWGRP | S_IRUGO);
+MODULE_PARM_DESC(blink_pr, "Blink period in ms");
+
 static int __init drv_blink_init(void)
 {
-    LOG("initialisation");
+    printk(KERN_INFO "BLINK DRV: Initialisation: blink at %d ms", blink_pr);
     // allocation of the major and minor dev
     if (register_chrdev_region(dev, 1, "blink_drv_dev_reg") < 0) {
 	    LOG("error can't create the dev with major and minor\n");
@@ -36,6 +44,7 @@ static int __init drv_blink_init(void)
     }
 
     return (0);
+
 r_class:
     class_destroy(dev_class);
 r_device:
@@ -45,7 +54,7 @@ r_device:
 
 static void drv_blink_exit(void)
 {
-    LOG("exit");
+    LOGINFO("exit");
     // destory the device in /dev
     device_destroy(dev_class, dev);
     // destroy the class in /sys/class
-- 
2.20.1

